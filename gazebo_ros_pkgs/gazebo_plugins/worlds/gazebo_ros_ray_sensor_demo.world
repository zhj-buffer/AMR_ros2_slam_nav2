<?xml version="1.0" encoding="UTF-8"?>
<!--
  Gazebo ROS Ray Sensor plugin demo

  To run:

      gazebo gazebo_ros_ray_sensor_demo.world

  Then open RVIZ:

      ros2 run rviz2 rviz2

  On RViz, add the following topics:

      * /ray/pointcloud2
      * /ray/pointcloud
      * /ray/laserscan
      * /gpu_ray/pointcloud2
      * /gpu_ray/pointcloud
      * /gpu_ray/laserscan

  (Note that the laser scans are not working on RViz due to https://github.com/ros2/rviz/issues/332)

  On RViz, change the "Fixed Frame" to `ray_link`

  Echo the range topics, i.e.

     ros2 topic echo /ray/range
     ros2 topic echo /gpu_ray/range
-->
<sdf version="1.6">
  <world name="ray_sensor_demo">
    <gravity>0 0 0</gravity>

    <include>
      <uri>model://sun</uri>
    </include>

    <model name="ray_sensor_box">
      <pose>-1.5 0.0 0.0 0.0 0.0 0.0</pose>
      <link name="ray_link">
        <visual name="visual_box">
          <geometry>
            <box>
              <size>0.05 0.05 0.05</size>
            </box>
          </geometry>
        </visual>
        <collision name="collision_box">
          <geometry>
            <box>
              <size>0.05 0.05 0.05</size>
            </box>
          </geometry>
          <laser_retro>100.0</laser_retro>
        </collision>

        <!-- ray sensor -->
        <sensor name="sensor_ray" type="ray">
          <ray>
            <scan>
              <horizontal>
                <samples>300</samples>
                <resolution>1.0</resolution>
                <min_angle>-0.5236</min_angle>
                <max_angle>0.5236</max_angle>
              </horizontal>
              <vertical>
                <samples>100</samples>
                <resolution>1.0</resolution>
                <min_angle>-0.5236</min_angle>
                <max_angle>0.5236</max_angle>
              </vertical>
            </scan>
            <range>
              <min>0.05</min>
              <max>50.0</max>
            </range>
          </ray>
          <always_on>true</always_on>
          <update_rate>1.0</update_rate>
          <plugin name="pc2" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/ray</namespace>
              <remapping>~/out:=pointcloud2</remapping>
            </ros>
            <output_type>sensor_msgs/PointCloud2</output_type>
          </plugin>
          <plugin name="pc" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/ray</namespace>
              <remapping>~/out:=pointcloud</remapping>
            </ros>
            <output_type>sensor_msgs/PointCloud</output_type>
          </plugin>
          <plugin name="laserscan" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/ray</namespace>
              <remapping>~/out:=laserscan</remapping>
            </ros>
            <output_type>sensor_msgs/LaserScan</output_type>
          </plugin>
          <plugin name="range" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/ray</namespace>
              <remapping>~/out:=range</remapping>
            </ros>
            <output_type>sensor_msgs/Range</output_type>
          </plugin>
        </sensor>

        <!-- gpu_ray sensor producing PointCloud / LaserScan -->
        <sensor name="sensor_gpu_ray" type="gpu_ray">
          <ray>
            <scan>
              <horizontal>
                <samples>300</samples>
                <resolution>1.0</resolution>
                <min_angle>-0.5236</min_angle>
                <max_angle>0.5236</max_angle>
              </horizontal>
              <!--
              gpu_ray currently only supports 1 vertical ray (no vertical tag)
              See https://bitbucket.org/osrf/gazebo/issues/2486
              <vertical>
                <samples>100</samples>
                <resolution>1.0</resolution>
                <min_angle>-0.5236</min_angle>
                <max_angle>0.5236</max_angle>
              </vertical-->
            </scan>
            <range>
              <min>0.05</min>
              <max>50.0</max>
            </range>
          </ray>
          <always_on>true</always_on>
          <update_rate>1.0</update_rate>
          <plugin name="pc2_gpu" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/gpu_ray</namespace>
              <remapping>~/out:=pointcloud2</remapping>
            </ros>
            <output_type>sensor_msgs/PointCloud2</output_type>
          </plugin>
          <plugin name="pc_gpu" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/gpu_ray</namespace>
              <remapping>~/out:=pointcloud</remapping>
            </ros>
            <output_type>sensor_msgs/PointCloud</output_type>
          </plugin>
          <plugin name="laserscan_gpu" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/gpu_ray</namespace>
              <remapping>~/out:=laserscan</remapping>
            </ros>
            <output_type>sensor_msgs/LaserScan</output_type>
          </plugin>
          <plugin name="range_gpu" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/gpu_ray</namespace>
              <remapping>~/out:=range</remapping>
            </ros>
            <output_type>sensor_msgs/Range</output_type>
          </plugin>
        </sensor>

      </link>
    </model>

    <model name="box">
      <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>
      <link name="base_link">
        <visual name="visual">
          <geometry>
            <box>
              <size>0.1 0.25 0.5</size>
            </box>
          </geometry>
        </visual>
        <collision name="collision">
          <geometry>
            <box>
              <size>0.1 0.25 0.5</size>
            </box>
          </geometry>
          <laser_retro>100.0</laser_retro>
        </collision>
      </link>
    </model>

    <model name="sphere">
      <pose>0.5 0.5 0.0 0.0 0.0 0.0</pose>
      <link name="base_link">
        <visual name="visual">
          <geometry>
            <sphere>
              <radius>0.05</radius>
            </sphere>
          </geometry>
        </visual>
        <collision name="collision">
          <geometry>
            <sphere>
              <radius>0.05</radius>
            </sphere>
          </geometry>
          <laser_retro>80.0</laser_retro>
        </collision>
      </link>
    </model>

    <model name="cylinder">
      <pose>0.5 -0.5 0.0 0.0 0.0 0.0</pose>
      <link name="base_link">
        <visual name="visual">
          <geometry>
            <cylinder>
              <radius>0.05</radius>
              <length>0.5</length>
            </cylinder>
          </geometry>
        </visual>
        <collision name="collision">
          <geometry>
            <cylinder>
              <radius>0.05</radius>
              <length>0.5</length>
            </cylinder>
          </geometry>
          <laser_retro>60.0</laser_retro>
        </collision>
      </link>
    </model>

  </world>
</sdf>
