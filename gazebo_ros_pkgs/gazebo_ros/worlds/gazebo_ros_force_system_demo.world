<?xml version="1.0"?>
<!--
  Gazebo ROS force system plugin demo

  The force_system is automatically loaded when using the launch files on gazebo_ros.
  Launch this world like this:

      ros2 launch gazebo_ros gazebo.launch.py world:="gazebo_ros_pkgs/gazebo_ros/worlds/gazebo_ros_force_system_demo.world"

  Then try for example:

    To apply wrench to a link:

      ros2 service call /apply_link_wrench gazebo_msgs/srv/ApplyLinkWrench '{link_name: \
      "single_pendulum_with_base::base", wrench: { force: { z: 110 } }, duration: {sec: -1, nanosec: 0} }'

    To clear wrenches on a link:

      ros2 service call /clear_link_wrenches 'gazebo_msgs/srv/LinkRequest' \
      '{link_name: "single_pendulum_with_base::base"}'

    To apply effort to a joint:

      ros2 service call /apply_joint_effort gazebo_msgs/srv/ApplyJointEffort '{joint_name: \
      "upper_joint", effort: -1.0, start_time: {sec: 0, nanosec: 0}, duration: {sec: -1, nanosec: 0} }'

    To clear efforts on a joint:

      ros2 service call /clear_joint_efforts 'gazebo_msgs/srv/JointRequest' '{joint_name: "upper_joint"}'
-->
<sdf version="1.6">
  <world name="default">
    <include>
      <uri>model://ground_plane</uri>
    </include>
    <include>
      <uri>model://sun</uri>
    </include>
    <model name="single_pendulum_with_base">
      <link name="base">
        <inertial>
          <mass>10</mass>
        </inertial>
        <visual name="vis_plate_on_ground">
          <pose>0 0 0.01 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.8</radius>
              <length>0.02</length>
            </cylinder>
          </geometry>
        </visual>
        <visual name="vis_pole">
          <pose>-0.275 0 1.1 0 0 0</pose>
          <geometry>
            <box>
              <size>0.2 0.2 2.2</size>
            </box>
          </geometry>
        </visual>
        <collision name="col_plate_on_ground">
          <pose>0 0 0.01 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.8</radius>
              <length>0.02</length>
            </cylinder>
          </geometry>
        </collision>
        <collision name="col_pole">
          <pose>-0.275 0 1.1 0 0 0</pose>
          <geometry>
            <box>
              <size>0.2 0.2 2.2</size>
            </box>
          </geometry>
        </collision>
      </link>
      <!-- upper link, length 1, IC -90 degrees -->
      <link name="upper_link">
        <pose>0 0 2.1 -3.14 0 0</pose>
        <self_collide>0</self_collide>
        <inertial>
          <pose>0 0 0.5 0 0 0</pose>
        </inertial>
        <visual name="vis_upper_joint">
          <pose>-0.05 0 0 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.1</radius>
              <length>0.3</length>
            </cylinder>
          </geometry>
        </visual>
        <visual name="vis_lower_joint">
          <pose>0 0 1.0 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.1</radius>
              <length>0.2</length>
            </cylinder>
          </geometry>
        </visual>
        <visual name="vis_cylinder">
          <pose>0 0 0.5 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.1</radius>
              <length>0.9</length>
            </cylinder>
          </geometry>
        </visual>
        <collision name="col_upper_joint">
          <pose>-0.05 0 0 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.1</radius>
              <length>0.3</length>
            </cylinder>
          </geometry>
        </collision>
        <collision name="col_lower_joint">
          <pose>0 0 1.0 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.1</radius>
              <length>0.2</length>
            </cylinder>
          </geometry>
        </collision>
        <collision name="col_cylinder">
          <pose>0 0 0.5 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.1</radius>
              <length>0.9</length>
            </cylinder>
          </geometry>
        </collision>
      </link>
      <!-- pin joint for upper link, at origin of upper link -->
      <joint name="upper_joint" type="revolute">
        <parent>base</parent>
        <child>upper_link</child>
        <axis>
          <xyz>1.0 0 0</xyz>
        </axis>
        <physics>
          <provide_feedback>true</provide_feedback>
        </physics>
      </joint>
    </model>
  </world>
</sdf>

