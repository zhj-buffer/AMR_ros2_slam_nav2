// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cartographer/mapping/proto/connected_components.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cartographer/mapping/proto/connected_components.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cartographer {
namespace mapping {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* ConnectedComponents_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConnectedComponents_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConnectedComponents_ConnectedComponent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConnectedComponents_ConnectedComponent_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto() {
  protobuf_AddDesc_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "cartographer/mapping/proto/connected_components.proto");
  GOOGLE_CHECK(file != NULL);
  ConnectedComponents_descriptor_ = file->message_type(0);
  static const int ConnectedComponents_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedComponents, connected_component_),
  };
  ConnectedComponents_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConnectedComponents_descriptor_,
      ConnectedComponents::default_instance_,
      ConnectedComponents_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConnectedComponents),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedComponents, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedComponents, _is_default_instance_));
  ConnectedComponents_ConnectedComponent_descriptor_ = ConnectedComponents_descriptor_->nested_type(0);
  static const int ConnectedComponents_ConnectedComponent_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedComponents_ConnectedComponent, trajectory_id_),
  };
  ConnectedComponents_ConnectedComponent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConnectedComponents_ConnectedComponent_descriptor_,
      ConnectedComponents_ConnectedComponent::default_instance_,
      ConnectedComponents_ConnectedComponent_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConnectedComponents_ConnectedComponent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedComponents_ConnectedComponent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedComponents_ConnectedComponent, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConnectedComponents_descriptor_, &ConnectedComponents::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConnectedComponents_ConnectedComponent_descriptor_, &ConnectedComponents_ConnectedComponent::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto() {
  delete ConnectedComponents::default_instance_;
  delete ConnectedComponents_reflection_;
  delete ConnectedComponents_ConnectedComponent::default_instance_;
  delete ConnectedComponents_ConnectedComponent_reflection_;
}

void protobuf_AddDesc_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n5cartographer/mapping/proto/connected_c"
    "omponents.proto\022\032cartographer.mapping.pr"
    "oto\"\243\001\n\023ConnectedComponents\022_\n\023connected"
    "_component\030\001 \003(\0132B.cartographer.mapping."
    "proto.ConnectedComponents.ConnectedCompo"
    "nent\032+\n\022ConnectedComponent\022\025\n\rtrajectory"
    "_id\030\001 \003(\005B\037B\035ConnectedComponentsOuterCla"
    "ssb\006proto3", 290);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cartographer/mapping/proto/connected_components.proto", &protobuf_RegisterTypes);
  ConnectedComponents::default_instance_ = new ConnectedComponents();
  ConnectedComponents_ConnectedComponent::default_instance_ = new ConnectedComponents_ConnectedComponent();
  ConnectedComponents::default_instance_->InitAsDefaultInstance();
  ConnectedComponents_ConnectedComponent::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto {
  StaticDescriptorInitializer_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto() {
    protobuf_AddDesc_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto();
  }
} static_descriptor_initializer_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectedComponents_ConnectedComponent::kTrajectoryIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectedComponents_ConnectedComponent::ConnectedComponents_ConnectedComponent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
}

void ConnectedComponents_ConnectedComponent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ConnectedComponents_ConnectedComponent::ConnectedComponents_ConnectedComponent(const ConnectedComponents_ConnectedComponent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
}

void ConnectedComponents_ConnectedComponent::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ConnectedComponents_ConnectedComponent::~ConnectedComponents_ConnectedComponent() {
  // @@protoc_insertion_point(destructor:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  SharedDtor();
}

void ConnectedComponents_ConnectedComponent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ConnectedComponents_ConnectedComponent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectedComponents_ConnectedComponent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConnectedComponents_ConnectedComponent_descriptor_;
}

const ConnectedComponents_ConnectedComponent& ConnectedComponents_ConnectedComponent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto();
  return *default_instance_;
}

ConnectedComponents_ConnectedComponent* ConnectedComponents_ConnectedComponent::default_instance_ = NULL;

ConnectedComponents_ConnectedComponent* ConnectedComponents_ConnectedComponent::New(::google::protobuf::Arena* arena) const {
  ConnectedComponents_ConnectedComponent* n = new ConnectedComponents_ConnectedComponent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectedComponents_ConnectedComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  trajectory_id_.Clear();
}

bool ConnectedComponents_ConnectedComponent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 trajectory_id = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_trajectory_id())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10, input, this->mutable_trajectory_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  return false;
#undef DO_
}

void ConnectedComponents_ConnectedComponent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  // repeated int32 trajectory_id = 1;
  if (this->trajectory_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_trajectory_id_cached_byte_size_);
  }
  for (int i = 0; i < this->trajectory_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->trajectory_id(i), output);
  }

  // @@protoc_insertion_point(serialize_end:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
}

::google::protobuf::uint8* ConnectedComponents_ConnectedComponent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  // repeated int32 trajectory_id = 1;
  if (this->trajectory_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _trajectory_id_cached_byte_size_, target);
  }
  for (int i = 0; i < this->trajectory_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->trajectory_id(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  return target;
}

int ConnectedComponents_ConnectedComponent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  int total_size = 0;

  // repeated int32 trajectory_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->trajectory_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->trajectory_id(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _trajectory_id_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectedComponents_ConnectedComponent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ConnectedComponents_ConnectedComponent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectedComponents_ConnectedComponent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
    MergeFrom(*source);
  }
}

void ConnectedComponents_ConnectedComponent::MergeFrom(const ConnectedComponents_ConnectedComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  trajectory_id_.MergeFrom(from.trajectory_id_);
}

void ConnectedComponents_ConnectedComponent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectedComponents_ConnectedComponent::CopyFrom(const ConnectedComponents_ConnectedComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectedComponents_ConnectedComponent::IsInitialized() const {

  return true;
}

void ConnectedComponents_ConnectedComponent::Swap(ConnectedComponents_ConnectedComponent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectedComponents_ConnectedComponent::InternalSwap(ConnectedComponents_ConnectedComponent* other) {
  trajectory_id_.UnsafeArenaSwap(&other->trajectory_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectedComponents_ConnectedComponent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConnectedComponents_ConnectedComponent_descriptor_;
  metadata.reflection = ConnectedComponents_ConnectedComponent_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectedComponents::kConnectedComponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectedComponents::ConnectedComponents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cartographer.mapping.proto.ConnectedComponents)
}

void ConnectedComponents::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ConnectedComponents::ConnectedComponents(const ConnectedComponents& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cartographer.mapping.proto.ConnectedComponents)
}

void ConnectedComponents::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ConnectedComponents::~ConnectedComponents() {
  // @@protoc_insertion_point(destructor:cartographer.mapping.proto.ConnectedComponents)
  SharedDtor();
}

void ConnectedComponents::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ConnectedComponents::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectedComponents::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConnectedComponents_descriptor_;
}

const ConnectedComponents& ConnectedComponents::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto();
  return *default_instance_;
}

ConnectedComponents* ConnectedComponents::default_instance_ = NULL;

ConnectedComponents* ConnectedComponents::New(::google::protobuf::Arena* arena) const {
  ConnectedComponents* n = new ConnectedComponents;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectedComponents::Clear() {
// @@protoc_insertion_point(message_clear_start:cartographer.mapping.proto.ConnectedComponents)
  connected_component_.Clear();
}

bool ConnectedComponents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cartographer.mapping.proto.ConnectedComponents)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .cartographer.mapping.proto.ConnectedComponents.ConnectedComponent connected_component = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_connected_component:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_connected_component()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_connected_component;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cartographer.mapping.proto.ConnectedComponents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cartographer.mapping.proto.ConnectedComponents)
  return false;
#undef DO_
}

void ConnectedComponents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cartographer.mapping.proto.ConnectedComponents)
  // repeated .cartographer.mapping.proto.ConnectedComponents.ConnectedComponent connected_component = 1;
  for (unsigned int i = 0, n = this->connected_component_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->connected_component(i), output);
  }

  // @@protoc_insertion_point(serialize_end:cartographer.mapping.proto.ConnectedComponents)
}

::google::protobuf::uint8* ConnectedComponents::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cartographer.mapping.proto.ConnectedComponents)
  // repeated .cartographer.mapping.proto.ConnectedComponents.ConnectedComponent connected_component = 1;
  for (unsigned int i = 0, n = this->connected_component_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->connected_component(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cartographer.mapping.proto.ConnectedComponents)
  return target;
}

int ConnectedComponents::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:cartographer.mapping.proto.ConnectedComponents)
  int total_size = 0;

  // repeated .cartographer.mapping.proto.ConnectedComponents.ConnectedComponent connected_component = 1;
  total_size += 1 * this->connected_component_size();
  for (int i = 0; i < this->connected_component_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->connected_component(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectedComponents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cartographer.mapping.proto.ConnectedComponents)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ConnectedComponents* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectedComponents>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cartographer.mapping.proto.ConnectedComponents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cartographer.mapping.proto.ConnectedComponents)
    MergeFrom(*source);
  }
}

void ConnectedComponents::MergeFrom(const ConnectedComponents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cartographer.mapping.proto.ConnectedComponents)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  connected_component_.MergeFrom(from.connected_component_);
}

void ConnectedComponents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cartographer.mapping.proto.ConnectedComponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectedComponents::CopyFrom(const ConnectedComponents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cartographer.mapping.proto.ConnectedComponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectedComponents::IsInitialized() const {

  return true;
}

void ConnectedComponents::Swap(ConnectedComponents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectedComponents::InternalSwap(ConnectedComponents* other) {
  connected_component_.UnsafeArenaSwap(&other->connected_component_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectedComponents::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConnectedComponents_descriptor_;
  metadata.reflection = ConnectedComponents_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectedComponents_ConnectedComponent

// repeated int32 trajectory_id = 1;
int ConnectedComponents_ConnectedComponent::trajectory_id_size() const {
  return trajectory_id_.size();
}
void ConnectedComponents_ConnectedComponent::clear_trajectory_id() {
  trajectory_id_.Clear();
}
 ::google::protobuf::int32 ConnectedComponents_ConnectedComponent::trajectory_id(int index) const {
  // @@protoc_insertion_point(field_get:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent.trajectory_id)
  return trajectory_id_.Get(index);
}
 void ConnectedComponents_ConnectedComponent::set_trajectory_id(int index, ::google::protobuf::int32 value) {
  trajectory_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent.trajectory_id)
}
 void ConnectedComponents_ConnectedComponent::add_trajectory_id(::google::protobuf::int32 value) {
  trajectory_id_.Add(value);
  // @@protoc_insertion_point(field_add:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent.trajectory_id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ConnectedComponents_ConnectedComponent::trajectory_id() const {
  // @@protoc_insertion_point(field_list:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent.trajectory_id)
  return trajectory_id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ConnectedComponents_ConnectedComponent::mutable_trajectory_id() {
  // @@protoc_insertion_point(field_mutable_list:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent.trajectory_id)
  return &trajectory_id_;
}

// -------------------------------------------------------------------

// ConnectedComponents

// repeated .cartographer.mapping.proto.ConnectedComponents.ConnectedComponent connected_component = 1;
int ConnectedComponents::connected_component_size() const {
  return connected_component_.size();
}
void ConnectedComponents::clear_connected_component() {
  connected_component_.Clear();
}
const ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent& ConnectedComponents::connected_component(int index) const {
  // @@protoc_insertion_point(field_get:cartographer.mapping.proto.ConnectedComponents.connected_component)
  return connected_component_.Get(index);
}
::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent* ConnectedComponents::mutable_connected_component(int index) {
  // @@protoc_insertion_point(field_mutable:cartographer.mapping.proto.ConnectedComponents.connected_component)
  return connected_component_.Mutable(index);
}
::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent* ConnectedComponents::add_connected_component() {
  // @@protoc_insertion_point(field_add:cartographer.mapping.proto.ConnectedComponents.connected_component)
  return connected_component_.Add();
}
::google::protobuf::RepeatedPtrField< ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent >*
ConnectedComponents::mutable_connected_component() {
  // @@protoc_insertion_point(field_mutable_list:cartographer.mapping.proto.ConnectedComponents.connected_component)
  return &connected_component_;
}
const ::google::protobuf::RepeatedPtrField< ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent >&
ConnectedComponents::connected_component() const {
  // @@protoc_insertion_point(field_list:cartographer.mapping.proto.ConnectedComponents.connected_component)
  return connected_component_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace mapping
}  // namespace cartographer

// @@protoc_insertion_point(global_scope)
